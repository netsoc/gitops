---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-kubelan
rules:
  - apiGroups: ['discovery.k8s.io']
    resources: ['endpointslices']
    verbs: ['watch', 'list']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-kubelan
roleRef:
  kind: ClusterRole
  name: traefik-kubelan
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: kube-system
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 10.1.1
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
  install:
    skipCRDs: true
  postRenderers:
    - kustomize:
        images:
          - name: ghcr.io/netsoc/traefik
            newTag: 2.5.0-rc2-5be7f6a2
  values:
    image:
      name: ghcr.io/netsoc/traefik
      # The chart uses semverCompare which ignores "pre-releases" by default (a "+" can't be in a docker ref), so we
      # patch the real version in with kustomize (see above)
      tag: 2.5.0

    logs:
      general:
        level: INFO
      access:
        enabled: true
        filters:
          statuscodes: '200,300-302,401,403'
    metrics: null
    providers:
      kubernetesCRD:
        enabled: true
      kubernetes:
        enabled: true
    ingressClass:
      enabled: true
      isDefaultClass: true
    ports:
      web:
        protocol: TCP
        port: 80
        expose: true
        redirectTo: websecure
      websecure:
        protocol: TCP
        port: 443
        expose: true
      lxd:
        protocol: TCP
        port: 8443
        expose: true
    tlsOptions:
      default:
        minVersion: VersionTLS12
        cipherSuites:
          - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
          - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
          - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
          - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    service:
      enabled: true
      type: LoadBalancer
      annotations:
        metallb.universe.tf/allow-shared-ip: http
      spec:
        loadBalancerIP: '134.226.83.100'
        externalTrafficPolicy: Local
    ingressRoute:
      dashboard:
        # We want to offer the dashboard on a custom host with auth
        enabled: false

    securityContext:
      capabilities:
        add: [NET_BIND_SERVICE]
        drop: [ALL]
      runAsNonRoot: false
      runAsUser: 0
      runAsGroup: 0
    deployment:
      replicas: 1
      additionalContainers:
        - name: kubelan
          image: 'ghcr.io/devplayer0/kubelan:0.2.3'
          env:
            - name: KL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: IFACE_IP
              value: '172.24.0.254/16'

            - name: KL_LOG_LEVEL
              value: DEBUG
            - name: KL_SERVICES
              value: 'traefik,webspaces/dnsmasq,webspaces/lxd8s,webspaces/webspaced'
            - name: KL_VXLAN_INTERFACE
              value: lxd-overlay
            - name: KL_VXLAN_VNI
              value: '7331'
            - name: KL_HOOKS_UP
              value: 'sh,-c,ip addr add $IFACE_IP dev $IFACE'
          ports:
            - name: http
              containerPort: 8181
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 5
          securityContext:
            capabilities:
              add: [NET_ADMIN]
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`traefik.netsoc.tcd.ie`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
      middlewares:
        - name: auth
  tls:
    secretName: tls-tcd
    domains:
      - main: '*.netsoc.tcd.ie'
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: auth
spec:
  basicAuth:
    secret: traefik-ops-users
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: dashboard-redirect
spec:
  redirectRegex:
    regex: '^https://traefik.netsoc.tcd.ie/(.*)'
    replacement: 'https://traefik.netsoc.tcd.ie/dashboard/${1}'
    permanent: true
